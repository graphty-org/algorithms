name: Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [lts/*]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        env:
          HUSKY: 0
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run build
        run: npm run build

      - name: Run unit tests
        run: npm run test:run

      - name: Run browser tests
        run: npm run test:browser

      - name: Generate coverage
        run: npm run test:coverage

      - name: Upload coverage reports to Coveralls
        uses: coverallsapp/github-action@v2
        if: matrix.node-version == 'lts/*'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ./coverage/lcov.info

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == 'lts/*'
        with:
          name: coverage
          path: coverage/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        env:
          HUSKY: 0
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
